Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    12                                           def mrcnn_infer(img, mrcnn_model_path, config_file_path):
    13                                               # Config File Parser
    14         1        361.0    361.0      0.0      config = configparser.ConfigParser()
    15         1       2022.0   2022.0      0.0      config.read(config_file_path)
    16         1        157.0    157.0      0.0      param = {s: dict(config.items(s)) for s in config.sections()}['general']
    17         4          4.0      1.0      0.0      for key in param:
    18         3          6.0      2.0      0.0          param[key] = int(param[key])
    19         1          1.0      1.0      0.0      cropsize = param['cropsize']
    20         1          1.0      1.0      0.0      padding = param['padding']
    21         1          1.0      1.0      0.0      threshold = param['threshold']
    22                                           
    23         1   21071196.0 21071196.0     26.8      model = generate_inference_model(mrcnn_model_path, cropsize)
    24         1       1260.0   1260.0      0.0      mask = np.zeros(img.shape)
    25                                           
    26         2         13.0      6.5      0.0      for i in range(len(img)):
    27         1       4447.0   4447.0      0.0          imarray = np.array(img[i]).astype('uint16')
    28         1       2972.0   2972.0      0.0          image = skimage.color.gray2rgb(imarray)
    29         1      28981.0  28981.0      0.0          image = map_uint16_to_uint8(image)
    30                                           
    31         1   27065434.0 27065434.0     34.5          stitched_inference_stack, num_times_visited = stitched_inference(image, cropsize, model, padding=padding)
    32                                           
    33         1        360.0    360.0      0.0          masks = CleanMask(stitched_inference_stack, threshold, )
    34         1   30370188.0 30370188.0     38.7          masks.merge_cells()
    35                                                   # n_conn_comp, graph_labels = merge_cells(masks)
    36                                           
    37         1       1315.0   1315.0      0.0          my_mask = masks.getMasks().astype("int16")
    38         1       4183.0   4183.0      0.0          mask[i, :, :] = my_mask
    39         1          1.0      1.0      0.0      return mask

