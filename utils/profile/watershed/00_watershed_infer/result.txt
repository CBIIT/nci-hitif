Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   118                                           def watershed_infer(img,gaussian_blur_model,distance_map_model,config_file_path):
   119                                           
   120                                               # Parser (Config file -> Dictionary)
   121         1        536.0    536.0      0.0      config = configparser.ConfigParser()
   122         1        776.0    776.0      0.0      config.read(config_file_path)
   123         1        181.0    181.0      0.0      param = {s: dict(config.items(s)) for s in config.sections()}['general']
   124                                           
   125         7          6.0      0.9      0.0      for key in param:
   126         6          5.0      0.8      0.0          if key == "global_threshold":
   127         1          3.0      3.0      0.0              param[key] = float(param[key])
   128                                                   else:
   129         5          8.0      1.6      0.0              param[key] = int(param[key])
   130                                           
   131                                               # Prediciton (Galussian_Blur DL model)
   132         1    3321007.0 3321007.0     43.3      img_gauss = model_prediction(img, gaussian_blur_model, param)
   133                                           
   134                                               # Prediction (Distance MAP DL Model)
   135         1    3333727.0 3333727.0     43.5      result = model_prediction(img_gauss, distance_map_model, param)
   136                                           
   137                                               # Global Thresholding
   138         1       2838.0   2838.0      0.0      result[result<param['global_threshold']] = 0
   139         1       1438.0   1438.0      0.0      result[result!=0] = 1
   140                                           
   141         1       2865.0   2865.0      0.0      mask = np.zeros(result.shape)
   142                                           
   143         2          6.0      3.0      0.0      for i in range(len(result)):
   144                                           
   145                                                   # Morphorligcal Operation
   146         1     509108.0 509108.0      6.6          mask[i] = closing(result[i], disk(6))
   147                                           
   148                                                   # Connected Component Analysis
   149         1      12125.0  12125.0      0.2          mask[i] = label(mask[i], connectivity=1, background=0)
   150                                           
   151                                                   # Watershed
   152         1     454510.0 454510.0      5.9          watershed_result = watershed(img_gauss[i], mask[i])
   153                                           
   154                                                   # Label size filter
   155         1      14240.0  14240.0      0.2          mask[i] = remove_small_objects(watershed_result, param['label_min_size'], connectivity=1)
   156         1      14955.0  14955.0      0.2          mask[i] = remove_large_objects(watershed_result, param['label_max_size'], connectivity=1)
   157                                           
   158         1          1.0      1.0      0.0      return mask

