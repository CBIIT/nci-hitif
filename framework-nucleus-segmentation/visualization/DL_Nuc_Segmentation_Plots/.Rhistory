Augmentation = aug,
F1_mean
) %>%
pivot_wider(names_from = `Cell Line`,
values_from = `F1_mean`) %>%
mutate( Augmentation = factor(Augmentation, levels = levs4),
Initialization = factor(Initialization, levels = levs1)) %>%
arrange(Model,
Initialization,
Augmentation)
View(table_7_reformat)
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
View(table_5)
View(table_6)
View(table_6)
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
table_1_reformat <- table_1 %>%
rename(
`Cell Line` = cell_line,
`MRCNN_0.7` = `MRCNN-0.7`,
`MRCNN_0.9` = `MRCNN-0.9`,
`FPN2-WS_0.7` = `FPN2-WS-0.7`,
`FPN2-WS_0.9` = `FPN2-WS-0.9`
) %>%
pivot_longer(
cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Threshold"),
values_to = "F1 Score"
) %>%
pivot_wider(
names_from = c(`Cell Line`, `Threshold`),
values_from = `F1 Score`,
names_sep = "/"
) %>%
arrange(Model)
levs1 <- c("Random", "Pre-initialized")
table_2_reformat <- table_2 %>%
rename(
`Cell Line` = cell_line,
`MRCNN_Random` = `MRCNN-Random`,
`MRCNN_Pre-initialized` = `MRCNN-Pre-initialized`,
`FPN2-WS_Random` = `FPN2-WS-Random`,
`FPN2-WS_Pre-initialized` = `FPN2-WS-Pre-initialized`
) %>%
pivot_longer(
cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Initialization"),
values_to = "F1 Score"
) %>%
pivot_wider(
names_from = `Cell Line`,
values_from = `F1 Score`,
) %>%
mutate(Initialization = factor(Initialization, levels = levs1)) %>%
arrange(Model, Initialization)
levs2 <- c("MCF10A",
"MCF10A-HCT116",
"MCF10A-HCT116-U2OS",
"All")
table_3_reformat <- table_3 %>%
rename(
`Cell Line` = cell_line,
`MRCNN_MCF10A` = `MRCNN-MCF10A`,
`MRCNN_MCF10A-HCT116` = `MRCNN-MCF10A_HCT116`,
`MRCNN_MCF10A-HCT116-U2OS` = `MRCNN-MCF10A_HCT116_U2OS`,
`MRCNN_All` = `MRCNN-All`,
`FPN2-WS_MCF10A` = `FPN2-WS-MCF10A`,
`FPN2-WS_MCF10A-HCT116` = `FPN2-WS-MCF10A_HCT116`,
`FPN2-WS_MCF10A-HCT116-U2OS` = `FPN2-WS-MCF10A_HCT116_U2OS`,
`FPN2-WS_All` = `FPN2-WS-All`,
) %>%
pivot_longer(
cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Training Set"),
values_to = "F1 Score"
) %>%
pivot_wider(
names_from = `Cell Line`,
values_from = `F1 Score`,
) %>%
mutate(`Training Set` = factor(`Training Set`, levels = levs2)) %>%
arrange(Model, `Training Set`)
table_4_reformat <- table_4 %>%
select(
`Cell Line` = cell_line,
`MRCNN_0.25X` = `MRCNN-0.25X`,
`MRCNN_0.5X` = `MRCNN-0.5X`,
`MRCNN_0.75X` = `MRCNN-0.75X`,
`MRCNN_1X` = `MRCNN-1X`,
`FPN2-WS_0.25X` = `FPN2-WS-0.25X`,
`FPN2-WS_0.5X` = `FPN2-WS-0.5X`,
`FPN2-WS_0.75X` = `FPN2-WS-0.75X`,
`FPN2-WS_1X` = `FPN2-WS-1X`
) %>%
pivot_longer(
cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Epochs"),
values_to = "F1 Score"
) %>%
pivot_wider(
names_from = `Cell Line`,
values_from = `F1 Score`,
) %>%
arrange(Model, Epochs)
table_5_reformat <- table_5 %>%
select(
`Cell Line` = cell_line,
`MRCNN_0.125X` = `MRCNN-0.125X`,
`MRCNN_0.25X` = `MRCNN-0.25X`,
`MRCNN_0.5X` = `MRCNN-0.5X`,
`MRCNN_1X` = `MRCNN-1X`,
`MRCNN_2X` = `MRCNN-2X`,
`FPN2-WS_0.125X` = `FPN2-WS-0.125X`,
`FPN2-WS_0.25X` = `FPN2-WS-0.25X`,
`FPN2-WS_0.5X` = `FPN2-WS-0.5X`,
`FPN2-WS_1X` = `FPN2-WS-1X`,
`FPN2-WS_2X` = `FPN2-WS-2X`
) %>%
pivot_longer(
cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Set Size"),
values_to = "F1 Score"
) %>%
pivot_wider(
names_from = `Cell Line`,
values_from = `F1 Score`,
) %>%
arrange(Model, `Set Size`)
levs3 <- c("Full",
"Min-Blur",
"Min-Contr",
"Min-Noise",
"Min-Scaling",
"None")
table_6_reformat <- table_6 %>%
select(`Cell Line` = cell_line,
`MRCNN_Full` = `MRCNN-Full`,
`MRCNN_Min-Blur` = `MRCNN-Min_Blur`,
`MRCNN_Min-Contr` = `MRCNN-Min_Contr`,
`MRCNN_Min-Noise` = `MRCNN-Min_Noise`,
`MRCNN_Min-Scaling` = `MRCNN-Min_Scaling`,
`MRCNN_None` = `MRCNN-None`,
`FPN2-WS_Full` = `FPN2-WS-Full`,
`FPN2-WS_Min-Blur` = `FPN2-WS-Min_Blur`,
`FPN2-WS_Min-Contr` = `FPN2-WS-Min_Contr`,
`FPN2-WS_Min-Noise` = `FPN2-WS-Min_Noise`,
`FPN2-WS_Min-Scaling` = `FPN2-WS-Min_Scaling`,
`FPN2-WS_None` = `FPN2-WS-None`
) %>%
pivot_longer(cols = -`Cell Line`,
names_sep = "_",
names_to = c("Model", "Augmentation"),
values_to = "F1 Score") %>%
pivot_wider(names_from = `Cell Line`,
values_from = `F1 Score`) %>%
mutate(Augmentation = factor(Augmentation, levels = levs3)) %>%
arrange(Model, Augmentation)
View(table_6_reformat)
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S1 <- read.csv("Output/cell-properties.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
View(table_S1)
View(table_S1)
View(table_S1)
View(table_S1)
View(table_S1)
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S1 <- read.csv("Output/cell-properties.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S1 <- read.csv("Output/cell-properties.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
View(table_S1)
library(tidyverse)
library(readr)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
cache = FALSE,
message = FALSE,
warning = FALSE
)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S1 <- read.csv("Output/cell-properties.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
View(table_S1)
table_1 <- read_csv("Output/Table1.csv")
table_2 <- read_csv("Output/Table2.csv")
table_3 <- read_csv("Output/Table3.csv")
table_4 <- read_csv("Output/Table4.csv")
table_5 <- read_csv("Output/Table5.csv")
table_6 <- read_csv("Output/Table6.csv")
table_7 <- read_csv("Output/Table7.csv")
table_8 <- read_csv("Output/Table8.csv")
table_S1 <- read_csv("Output/cell-properties.csv")
table_S3 <- read_csv("Output/TableS3.csv")
table_S4 <- read_csv("Output/TableS4.csv")
View(table_S1)
table_S1 %>%
kable(format = "html",
escape = F) %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
position = "center") %>%
row_spec(1, bold = T) %>%
column_spec(1, bold = T)
table_S1 %>%
kable(format = "html",
escape = F) %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
position = "center") %>%
row_spec(1, bold = T) %>%
column_spec(1, bold = T)
table_S1 %>%
kable(format = "html",
escape = F) %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
position = "center",
font_size = 10) %>%
row_spec(1, bold = T) %>%
column_spec(1, bold = T)
View(table_S4)
library(tidyverse)
library(readr)
library(curl)
library(ggthemes)
knitr::opts_chunk$set(
cache = FALSE,
fig.path = "Output/",
dev = c("png", "pdf"),
message = FALSE,
warning = FALSE
)
theme_set(theme_bw())
theme_update(
axis.text.x = element_text(
angle = -45,
hjust = 0,
vjust = 0.5
),
axis.text.y = element_text(hjust = 0)
)
calculate_F1 <- function(tp, fn, fp){
tp/(tp + (fn + fp)/2)
}
raw_tbl <- dir(path = "Data",
pattern = ".*maps\\.csv$",
recursive = TRUE,
full.names = TRUE) %>%
set_names() %>%
map_df(read_csv, .id = "filename") %>%
select(filename,
thres = `IoU(Threshold)`,
TP = `Sum(all_tp)`,
FP = `Sum(all_fp)`,
FN = `Sum(all_fn)`,
mAP = AP) %>%
mutate(F1 = calculate_F1(tp = TP,
fn = FN,
fp = FP))
glimpse(raw_tbl)
manual_vs_auto_tbl <- raw_tbl %>%
filter(str_detect(filename, "manual-vs-semi-auto")) %>% #only manual vs. semi-automated run
mutate(
filename = str_replace(filename, "BABE", "MCF10A"),
filename = str_replace(filename, "HiTIF_Colorectal", "HCT116"),
filename = str_replace(filename, "HiTIF_Laurent", "U2OS"),
filename = str_replace(filename, "Manasi", "Eosinophils"),
cell_line = str_match(filename, pattern = "Data/.*?/(.*?)_.*?/")[, 2],
replicate = str_match(filename, pattern = "Data/.*?/.*?_(.*?)/")[, 2],
cell_line = factor(cell_line, levels = levs1),
replicate = factor(replicate, levels = levs2)
)
levs1 <- c("MCF10A", "U2OS", "HCT116", "Eosinophils")
levs2 <-
c("Original",
"Technical",
"Biological",
"Technical_manual",
"Biological_manual")
runs_tbl <- raw_tbl %>%
filter(!str_detect(filename, "manual-vs-semi-auto")) %>% #only model runs
mutate(
filename = str_replace(filename, "BABE", "MCF10A"),
filename = str_replace(filename, "HiTIF_Colorectal", "HCT116"),
filename = str_replace(filename, "HiTIF_Laurent", "U2OS"),
filename = str_replace(filename, "Manasi", "Eosinophils"),
run = as.numeric(str_match(filename, pattern = "run([0-9]{3})")[, 2]),
cell_line = str_match(filename, pattern = "Data/.*?/.*?/.*?/(.*?)_.*?/")[, 2],
replicate = str_match(filename, pattern = "Data/.*?/.*?/.*?/.*?_(.*?)/")[, 2],
cell_line = factor(cell_line, levels = levs1),
replicate = factor(replicate, levels = levs2)
)
glimpse(runs_tbl)
manual_vs_auto_tbl <- raw_tbl %>%
filter(str_detect(filename, "manual-vs-semi-auto")) %>% #only manual vs. semi-automated run
mutate(
filename = str_replace(filename, "BABE", "MCF10A"),
filename = str_replace(filename, "HiTIF_Colorectal", "HCT116"),
filename = str_replace(filename, "HiTIF_Laurent", "U2OS"),
filename = str_replace(filename, "Manasi", "Eosinophils"),
cell_line = str_match(filename, pattern = "Data/.*?/(.*?)_.*?/")[, 2],
replicate = str_match(filename, pattern = "Data/.*?/.*?_(.*?)/")[, 2],
cell_line = factor(cell_line, levels = levs1),
replicate = factor(replicate, levels = levs2)
)
glimpse(manual_vs_auto_tbl)
md_tbl <- read_csv("Metadata/Metadata.csv")
glimpse(md_tbl)
md_explore <-
md_tbl %>% select(model, initialization, train_set, train_size, epochs, aug, run) %>%
arrange(model, initialization, train_set, train_size, epochs, aug, run)
knitr::kable(md_explore)
levs3 <- c("Random", "Pre-initialized")
levs4 <-
c("MCF10A",
"Eosinophils",
"MCF10A_HCT116",
"MCF10A_HCT116_U2OS",
"All",
"BBBC038",
"CellPose")
levs5 <- c("MRCNN", "FPN2-WS", "Jacobkie", "CellPose", "Kaggle_5th")
runs_tbl <- runs_tbl %>%
left_join(md_tbl, by = c("run")) %>%
mutate(
initialization = factor(initialization, levels = levs3),
train_set = factor(train_set, levels = levs4),
train_size = factor(train_size),
run = factor(run),
aug = factor(aug),
epochs = factor(epochs),
model = factor(model, levels = levs5)
)
glimpse(runs_tbl)
testing_tbl <- runs_tbl %>%
#only test datasets
filter(replicate != "Original") %>%
# only the `biological` replicate for MCF10 cells
filter(!(cell_line == "MCF10A" & replicate == "Technical"))
glimpse(testing_tbl)
testing_07_tbl <- testing_tbl %>%
filter(round(thres, digits = 2) == 0.70,
replicate %in% c("Technical", "Biological"))
gen_line <- function(df) {
df %>%
ggplot(aes(
x = thres,
y = F1,
color = cell_line
)) +
geom_line() +
geom_vline(xintercept = 0.7,
linetype = "longdash",
color = "grey60") +
facet_wrap(vars(model)) +
scale_linetype_discrete("Replicate") +
scale_color_few(name = "Cell Line") +
xlab("IoU Threshold") +
ylab("F1 Score")
}
gen_point <- function(df, varx, x_legend){
df %>%
ggplot(aes(x = {{ varx}},
y = F1,
color = model)) +
geom_point(alpha = 0.7,
size = 3) +
scale_y_continuous(lim = c(0, 1.05),
breaks = seq(0, 1, 0.1)) +
scale_color_few(name = "Model") +
facet_wrap(vars(.data$cell_line),
nrow = 1) +
xlab(x_legend) +
ylab("F1 Score @ IoU 0.7")
}
gen_table <- function(df, varx){
df %>%
filter(round(.data$thres, digits = 2) %in% c(0.70, 0.9)) %>%
select(.data$model, .data$cell_line, {{varx}}, .data$F1) %>%
pivot_wider(
names_from = c(.data$model, {{varx}}),
values_from = .data$F1,
names_sep = "-"
)
}
cell_pose <- fig_5B <- testing_tbl %>%
filter(run %in% c(10, 37, 44, 84),
replicate %in% c("Technical", "Biological"))
gen_line(cell_pose)
View(cell_pose)
cell_pose <- fig_5B <- testing_tbl %>%
filter(run %in% c(10, 37, 44, 84),
replicate %in% c("Biological"))
gen_line(cell_pose)
cell_pose <- fig_5B <- testing_tbl %>%
filter(run %in% c(10, 37, 44, 84),
replicate %in% c("Technical", "Biological"))
gen_line(cell_pose)
call_pose_table <- gen_table(cell_pose, thres)
write_csv(cell_pose_table, path = "Output/cell_pose_table.csv")
cell_pose_table <- gen_table(cell_pose, thres)
write_csv(cell_pose_table, path = "Output/cell_pose_table.csv")
cell_pose <- testing_tbl %>%
filter(run %in% c(10, 37, 44, 84),
replicate %in% c("Technical", "Biological"))
gen_line(cell_pose)
View(cell_pose)
View(testing_tbl)
View(call_pose_table)
